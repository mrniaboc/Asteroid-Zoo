// Generated by CoffeeScript 1.6.3
(function() {
  var BaseController, Dialog, template, _base, _base1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (window.zooniverse == null) {
    window.zooniverse = {};
  }

  if ((_base = window.zooniverse).controllers == null) {
    _base.controllers = {};
  }

  if ((_base1 = window.zooniverse).views == null) {
    _base1.views = {};
  }

  BaseController = zooniverse.controllers.BaseController || require('./base-controller');

  template = zooniverse.views.dialog || require('../views/dialog');

  Dialog = (function(_super) {
    __extends(Dialog, _super);

    Dialog.prototype.warning = false;

    Dialog.prototype.error = false;

    Dialog.prototype.content = '';

    Dialog.prototype.className = 'zooniverse-dialog';

    Dialog.prototype.template = template;

    Dialog.prototype.events = {
      'click button[name="close-dialog"]': 'hide',
      'keydown': 'onKeyDown'
    };

    Dialog.prototype.elements = {
      '.dialog': 'contentContainer'
    };

    function Dialog() {
      Dialog.__super__.constructor.apply(this, arguments);
      this.el.css({
        display: 'none'
      });
      if (this.warning) {
        this.el.addClass('warning');
      }
      if (this.error) {
        this.el.addClass('error');
      }
      this.contentContainer.append(this.content);
      this.el.appendTo(document.body);
    }

    Dialog.prototype.onKeyDown = function(_arg) {
      var which;
      which = _arg.which;
      if (which === 27) {
        return this.hide();
      }
    };

    Dialog.prototype.show = function() {
      var _this = this;
      this.el.css({
        display: ''
      });
      setTimeout(function() {
        return _this.el.addClass('showing');
      });
      return this.contentContainer.find('input, textarea, select').first().focus();
    };

    Dialog.prototype.hide = function() {
      var _this = this;
      this.el.removeClass('showing');
      return setTimeout((function() {
        return _this.el.css({
          display: 'none'
        });
      }), 500);
    };

    return Dialog;

  })(BaseController);

  window.zooniverse.controllers.Dialog = Dialog;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Dialog;
  }

}).call(this);
