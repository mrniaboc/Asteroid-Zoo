// Generated by CoffeeScript 1.6.3
(function() {
  var LanguageManager, translate, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6,
    __slice = [].slice;

  LanguageManager = ((_ref = window.zoonivers) != null ? _ref.LanguageManager : void 0) || require('./language-manager');

  translate = function() {
    var element, key, tag, _arg, _i;
    _arg = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), key = arguments[_i++];
    tag = _arg[0];
    if (tag == null) {
      tag = 'span';
    }
    element = document.createElement(tag);
    element.setAttribute(translate.attr, key);
    translate.refresh(element);
    return element.outerHTML;
  };

  translate.attr = 'data-zooniverse-translate';

  translate.strings = {
    en: ((_ref1 = window.zooniverse) != null ? (_ref2 = _ref1.translations) != null ? _ref2.en : void 0 : void 0) || require('../translations/en'),
    es: ((_ref3 = window.zooniverse) != null ? (_ref4 = _ref3.translations) != null ? _ref4.es : void 0 : void 0) || require('../translations/es'),
    fr: ((_ref5 = window.zooniverse) != null ? (_ref6 = _ref5.translations) != null ? _ref6.fr : void 0 : void 0) || require('../translations/fr')
  };

  translate.refresh = function(element, key) {
    var name, property, string, value, _i, _len, _ref10, _ref11, _ref7, _ref8, _ref9, _results;
    _ref7 = element.attributes;
    _results = [];
    for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
      _ref8 = _ref7[_i], name = _ref8.name, value = _ref8.value;
      if (name.slice(0, translate.attr.length) !== translate.attr) {
        continue;
      }
      if (!value) {
        continue;
      }
      property = name.slice(translate.attr.length + 1) || 'innerHTML';
      string = (_ref9 = translate.strings[(_ref10 = LanguageManager.current) != null ? _ref10.code : void 0]) != null ? _ref9[value] : void 0;
      string || (string = (_ref11 = translate.strings[LanguageManager.prototype.code]) != null ? _ref11[value] : void 0);
      string || (string = value);
      _results.push(element[property] = string);
    }
    return _results;
  };

  LanguageManager.on('change-language', function() {
    var element, _i, _len, _ref7, _results;
    _ref7 = document.querySelectorAll("[" + translate.attr + "]");
    _results = [];
    for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
      element = _ref7[_i];
      _results.push(translate.refresh(element));
    }
    return _results;
  });

  if (window.zooniverse == null) {
    window.zooniverse = {};
  }

  window.zooniverse.translate = translate;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = translate;
  }

}).call(this);
