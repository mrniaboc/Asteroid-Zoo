// Generated by CoffeeScript 1.6.3
(function() {
  var $, EventEmitter, GA_SCOPES, GoogleAnalytics, gaSrc,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  if (window.zooniverse == null) {
    window.zooniverse = {};
  }

  EventEmitter = window.zooniverse.EventEmitter || require('./event-emitter');

  $ = window.jQuery;

  GA_SCOPES = {
    visitor: 1,
    session: 2,
    page: 3
  };

  gaSrc = 'http://www.google-analytics.com/ga.js';

  if (window.location.protocol === 'https:') {
    gaSrc = gaSrc.replace('http://www', 'https://ssl');
  }

  GoogleAnalytics = (function(_super) {
    __extends(GoogleAnalytics, _super);

    GoogleAnalytics.current = null;

    GoogleAnalytics.prototype.account = '';

    GoogleAnalytics.prototype.domain = '';

    GoogleAnalytics.prototype.trackHashes = true;

    function GoogleAnalytics(params) {
      var property, value,
        _this = this;
      if (params == null) {
        params = {};
      }
      for (property in params) {
        value = params[property];
        this[property] = value;
      }
      this.select();
      if (!window._gaq) {
        $.getScript(gaSrc);
      }
      if (window._gaq == null) {
        window._gaq = [];
      }
      window._gaq.push(['_setAccount', this.account]);
      if (this.domain) {
        window._gaq.push(['_setDomainName', this.domain]);
      }
      window._gaq.push(['_trackPageview']);
      if (this.trackHashes) {
        $(window).on('hashchange', (function() {
          return _this.track();
        }));
      }
    }

    GoogleAnalytics.prototype.select = function() {
      this.constructor.current = this;
      return this.trigger('select');
    };

    GoogleAnalytics.prototype.track = function(pathname) {
      if (typeof pathname !== 'string') {
        pathname = "/" + location.hash;
      }
      window._gaq.push(['_trackPageview', pathname]);
      return this.trigger('track', [pathname]);
    };

    GoogleAnalytics.prototype.event = function(category, action, label, value, ignoreForBounceRate) {
      window._gaq.push(['_trackEvent'].concat(__slice.call(arguments)));
      return this.trigger('event', __slice.call(arguments));
    };

    GoogleAnalytics.prototype.custom = function(index, key, value, scope) {
      var command;
      if (typeof index === 'string') {
        index = this.constructor.indices[index];
      }
      if (typeof scope === 'string') {
        scope = GA_SCOPES[scope];
      }
      command = ['_setCustomVar', index, key, value];
      if (scope != null) {
        command.push(scope);
      }
      window._gaq.push(command);
      return this.trigger('custom', __slice.call(arguments));
    };

    return GoogleAnalytics;

  })(EventEmitter);

  window.zooniverse.GoogleAnalytics = GoogleAnalytics;

  module.exports = GoogleAnalytics;

}).call(this);
